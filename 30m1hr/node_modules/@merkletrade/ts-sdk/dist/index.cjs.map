{"version":3,"file":"index.cjs","sources":["../src/utils/decimal.ts","../src/utils/time.ts","../src/utils/error.ts","../src/types/api/trading.ts","../src/types/api/summary.ts","../src/api/http.ts","../src/api/ws.ts","../src/types/trading.ts","../src/calc/trading.ts","../src/calc/trading-utils.ts","../src/aptos/payloads.ts","../src/aptos/helpers.ts","../src/client/api/http.ts","../src/client/api/ws.ts","../src/client/aptos/helpers.ts","../src/client/aptos/payloads.ts","../src/config.ts","../src/client/config.ts","../src/client/merkle.ts"],"sourcesContent":["import type * as tsa from \"ts-arithmetic\";\nimport type * as tf from \"type-fest\";\n\ndeclare const __decimal: unique symbol;\n\nexport type Decimal<N extends Range | unknown> = bigint & {\n  readonly [__decimal]: N;\n};\n\nexport namespace Decimal {\n  export type Of<T> = T extends Decimal<infer N> ? N : unknown;\n}\n\ntype Range = tf.IntRange<0, 50>;\n\nnamespace Range {\n  export type UnsafeAdd<A, B> = A extends number\n    ? B extends number\n      ? tf.Sum<A, B> extends Range\n        ? tf.Sum<A, B>\n        : unknown\n      : unknown\n    : unknown;\n\n  export type UnsafeSub<A, B> = A extends number\n    ? B extends number\n      ? tf.Sum<A, tsa.Negate<B>> extends Range\n        ? tf.Sum<A, tsa.Negate<B>>\n        : unknown\n      : unknown\n    : unknown;\n}\n\n/** operations */\n\nexport function dec<N extends Range>(n: bigint): Decimal<N> {\n  return n as Decimal<N>;\n}\n\n/** equivalent to `dec<0>` */\nexport function dec0(n: bigint): Decimal<0> {\n  return n as Decimal<0>;\n}\n\nexport function undec<N extends Range>(n: Decimal<N>): bigint {\n  return n as bigint;\n}\n\nexport function one<N extends Range>(\n  decimals: N,\n  isPositive?: boolean,\n): Decimal<N> {\n  const one0 = dec0(isPositive === undefined || isPositive ? 1n : -1n);\n  return shift(one0, decimals) as Decimal<N>;\n}\n\nexport function zero<N extends Range>() {\n  return 0n as Decimal<N>;\n}\n\nexport function sign<N extends Range>(n: Decimal<N>) {\n  return (n > 0n ? 1n : -1n) as Decimal<N>;\n}\n\nexport function neg<N extends Range>(n: Decimal<N>) {\n  return -n as Decimal<N>;\n}\n\nexport function shift<\n  N extends Range,\n  const S extends Range | tsa.Negate<Range>,\n>(n: Decimal<N>, shiftBy: S) {\n  if (shiftBy === 0) return n as Decimal<Range.UnsafeAdd<N, S>>;\n  if (shiftBy > 0) {\n    return (n * 10n ** BigInt(shiftBy)) as Decimal<Range.UnsafeAdd<N, S>>;\n  }\n  return (n / 10n ** BigInt(-shiftBy)) as Decimal<Range.UnsafeAdd<N, S>>;\n}\n\nexport function add<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return (a + b) as Decimal<N>;\n}\n\nexport function sub<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return (a - b) as Decimal<N>;\n}\n\nexport function mul<A extends Range, B extends Range>(\n  a: Decimal<A>,\n  b: Decimal<B>,\n): Decimal<Range.UnsafeAdd<A, B>> {\n  return (a * b) as Decimal<Range.UnsafeAdd<A, B>>;\n}\n\nexport function div<A extends Range, B extends Range>(\n  a: Decimal<A>,\n  b: Decimal<B>,\n): Decimal<Range.UnsafeSub<A, B>> {\n  return (a / b) as Decimal<Range.UnsafeSub<A, B>>;\n}\n\nexport function gt<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return a > b;\n}\n\nexport function gte<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return a >= b;\n}\n\nexport function lt<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return a < b;\n}\n\nexport function lte<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return a <= b;\n}\n\nexport function min<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return a < b ? a : b;\n}\n\nexport function max<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return a > b ? a : b;\n}\n\nexport function abs<N extends Range>(n: Decimal<N>) {\n  return (n < 0n ? -n : n) as Decimal<N>;\n}\n\nexport function avg<N extends Range>(a: Decimal<N>, b: Decimal<NoInfer<N>>) {\n  return div(add(a, b), dec(2n)) as Decimal<N>;\n}\n\nexport function fromNumber<N extends Range>(n: number, decimals: N) {\n  return BigInt(Math.floor(n * 10 ** decimals)) as Decimal<N>;\n}\n\nexport function toNumber<N extends Range>(\n  n: Decimal<N>,\n  decimals: NoInfer<N>,\n): number;\nexport function toNumber<N>(\n  n: Decimal<N extends Range ? `decimals must be ${N}` : N>, // disallow Range (only for unknown)\n  decimals: number,\n): number;\nexport function toNumber<N extends Range>(n: Decimal<N>, decimals: NoInfer<N>) {\n  return Number(n) / 10 ** decimals;\n}\n\nexport function toFixed<N extends Range>(\n  n: Decimal<N>,\n  decimals: NoInfer<N>,\n): string;\nexport function toFixed<N>(\n  n: Decimal<N extends Range ? `decimals must be ${N}` : N>, // disallow Range (only for unknown)\n  decimals: number,\n): string;\nexport function toFixed(n: Decimal<Range | unknown>, decimals: number) {\n  if (decimals === 0) return n.toString();\n  const one = 10n ** BigInt(decimals);\n  const absN = n < 0n ? -n : n;\n  const sign = n < 0n ? \"-\" : \"\";\n  const integer = (absN / one).toString();\n  const fractional = (absN % one).toString().padStart(decimals, \"0\");\n  return `${sign}${integer}.${fractional}`;\n}\n","export const sleep = (ms: number) =>\n  new Promise((resolve) => setTimeout(resolve, ms));\n","/** side-effect: modifies original Error object */\nconst removeFirstStack = (e: Error): Error => {\n  if (!e.stack) return e;\n  const stack = e.stack.split(\"\\n\");\n  e.stack = [stack[0], ...stack.slice(2)].join(\"\\n\");\n  return e;\n};\n\nexport const raise = (e?: string | Error) => {\n  if (e === undefined || typeof e === \"string\") {\n    throw removeFirstStack(new Error(e));\n  }\n  throw e;\n};\n","import type { Hex, MoveStructId, TableHandle } from \"@/types\";\nimport type {\n  Order,\n  PairInfo,\n  PairState,\n  Position,\n  PositionEvent,\n} from \"@/types/trading\";\nimport { dec } from \"@/utils\";\n\nexport type RawPairInfoResponse = {\n  collateralType: MoveStructId;\n  pairType: MoveStructId;\n  executeTimeLimit: number;\n  executionFee: string;\n  liquidateThreshold: string;\n  makerFee: string;\n  maxFundingVelocity: string;\n  maxLeverage: string;\n  maxOpenInterest: string;\n  maximumPositionCollateral: string;\n  maximumProfit: string;\n  minLeverage: string;\n  minimumOrderCollateral: string;\n  minimumPositionCollateral: string;\n  minimumPositionSize: string;\n  paused: boolean;\n  rolloverFeePerTimestamp: string;\n  skewFactor: string;\n  takerFee: string;\n  cooldownPeriodSecond: number;\n  maximumSkewLimit: string;\n  timestamp: string;\n  timestampV1: string;\n  timestampV2: string;\n  version: number;\n  versionV1: number;\n  versionV2: number;\n};\n\nexport namespace RawPairInfoResponse {\n  export function to(raw: RawPairInfoResponse): PairInfo {\n    return {\n      ...raw,\n\n      minLeverage: dec(BigInt(raw.minLeverage)),\n      maxLeverage: dec(BigInt(raw.maxLeverage)),\n      makerFee: dec(BigInt(raw.makerFee)),\n      takerFee: dec(BigInt(raw.takerFee)),\n      rolloverFeePerTimestamp: dec(BigInt(raw.rolloverFeePerTimestamp)),\n      skewFactor: dec(BigInt(raw.skewFactor)),\n      maxFundingVelocity: dec(BigInt(raw.maxFundingVelocity)),\n      maxOpenInterest: dec(BigInt(raw.maxOpenInterest)),\n      liquidateThreshold: dec(BigInt(raw.liquidateThreshold)),\n      maximumProfit: dec(BigInt(raw.maximumProfit)),\n      minimumOrderCollateral: dec(BigInt(raw.minimumOrderCollateral)),\n      minimumPositionCollateral: dec(BigInt(raw.minimumPositionCollateral)),\n      minimumPositionSize: dec(BigInt(raw.minimumPositionSize)),\n      maximumPositionCollateral: dec(BigInt(raw.maximumPositionCollateral)),\n      executionFee: dec(BigInt(raw.executionFee)),\n\n      maximumSkewLimit: dec(BigInt(raw.maximumSkewLimit)),\n\n      timestamp: new Date(raw.timestamp),\n      timestampV1: new Date(raw.timestampV1),\n      timestampV2: new Date(raw.timestampV2),\n    };\n  }\n}\n\nexport type RawPairStateResponse = {\n  version: number;\n  timestamp: string;\n\n  collateralType: MoveStructId;\n  pairType: MoveStructId;\n\n  nextOrderId: number;\n  longOpenInterest: string;\n  shortOpenInterest: string;\n  fundingRate: string;\n  accFundingFeePerSize: string;\n  accRolloverFeePerCollateral: string;\n  lastAccrueTimestamp: number;\n\n  orders: TableHandle;\n  longPositions: TableHandle;\n  shortPositions: TableHandle;\n};\n\nexport namespace RawPairStateResponse {\n  export function to(raw: RawPairStateResponse): PairState {\n    return {\n      ...raw,\n      timestamp: new Date(raw.timestamp),\n\n      longOpenInterest: dec(BigInt(raw.longOpenInterest)),\n      shortOpenInterest: dec(BigInt(raw.shortOpenInterest)),\n      fundingRate: dec(BigInt(raw.fundingRate)),\n      accFundingFeePerSize: dec(BigInt(raw.accFundingFeePerSize)),\n      accRolloverFeePerCollateral: dec(BigInt(raw.accRolloverFeePerCollateral)),\n    };\n  }\n}\n\nexport type RawTradeHistory = {\n  version: number;\n  type: MoveStructId;\n  orderId: string;\n  uid: string;\n\n  address: Hex;\n  eventType: PositionEvent.EventType;\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n\n  isLong: boolean;\n  leverage: string;\n  price: string;\n  originalSize: string;\n  sizeDelta: string;\n  originalCollateral: string;\n  collateralDelta: string;\n  isIncrease: boolean;\n\n  pnlWithoutFee: string;\n  entryExitFee: string;\n  fundingFee: string;\n  rolloverFee: string;\n\n  longOpenInterest: string;\n  shortOpenInterest: string;\n\n  ts: string;\n};\n\nexport namespace RawTradeHistory {\n  export function to(raw: RawTradeHistory): TradeHistory {\n    return {\n      ...raw,\n      version: +raw.version,\n      orderId: +raw.orderId,\n      uid: +raw.uid,\n      ts: new Date(raw.ts),\n    };\n  }\n}\n\nexport type TradeHistory = Omit<\n  RawTradeHistory,\n  \"version\" | \"orderId\" | \"uid\" | \"ts\"\n> & {\n  version: number;\n  orderId: number;\n  uid: number;\n  ts: Date;\n};\n\nexport type RawPosition = {\n  version: number;\n  timestamp: string;\n\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  isLong: boolean;\n  user: Hex;\n\n  uid: number;\n  size: string;\n  collateral: string;\n  avgPrice: string;\n  lastExecuteTimestamp: number;\n  accRolloverFeePerCollateral: string;\n  accFundingFeePerSize: string;\n  stopLossTriggerPrice: string;\n  takeProfitTriggerPrice: string;\n};\n\nexport namespace RawPosition {\n  export function to(raw: RawPosition): Position {\n    return {\n      ...raw,\n      timestamp: new Date(raw.timestamp),\n\n      size: dec(BigInt(raw.size)),\n      collateral: dec(BigInt(raw.collateral)),\n      avgPrice: dec(BigInt(raw.avgPrice)),\n      accRolloverFeePerCollateral: dec(BigInt(raw.accRolloverFeePerCollateral)),\n      accFundingFeePerSize: dec(BigInt(raw.accFundingFeePerSize)),\n      stopLossTriggerPrice: dec(BigInt(raw.stopLossTriggerPrice)),\n      takeProfitTriggerPrice: dec(BigInt(raw.takeProfitTriggerPrice)),\n    };\n  }\n}\n\nexport type RawOrder = {\n  version: number;\n  timestamp: string;\n\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  orderId: number;\n\n  /** @deprecated */\n  uid: number;\n  user: Hex;\n  sizeDelta: string;\n  collateralDelta: string;\n  price: string;\n  isLong: boolean;\n  isIncrease: boolean;\n  isMarket: boolean;\n  canExecuteAbovePrice: boolean;\n  stopLossTriggerPrice: string;\n  takeProfitTriggerPrice: string;\n  createdTimestamp: number;\n};\n\nexport namespace RawOrder {\n  export function to(raw: RawOrder): Order {\n    return {\n      ...raw,\n      timestamp: new Date(raw.timestamp),\n\n      sizeDelta: dec(BigInt(raw.sizeDelta)),\n      collateralDelta: dec(BigInt(raw.collateralDelta)),\n      price: dec(BigInt(raw.price)),\n\n      stopLossTriggerPrice: dec(BigInt(raw.stopLossTriggerPrice)),\n      takeProfitTriggerPrice: dec(BigInt(raw.takeProfitTriggerPrice)),\n    };\n  }\n}\n","import type { Hex, MoveStructId } from \"@/types\";\n\nexport type RawSummaryResponse = {\n  hostAddress: Hex;\n  lzBridgeAddress: Hex;\n  collectionIds: {\n    gear: Hex;\n    userNameTicket: Hex;\n  };\n  liquidswapLp: Hex;\n  liquidswapV05: Hex;\n  merkleBridgeTools: Hex;\n  multisigUtils: Hex;\n  coins: SummaryCoin[];\n  pairs: RawSummaryPair[];\n  gasEstimates: {\n    deprioritized: number;\n    regular: number;\n    prioritized: number;\n  };\n  prices: SummaryPrice[];\n};\n\nexport namespace RawSummaryResponse {\n  export function to(raw: RawSummaryResponse): Summary {\n    return {\n      ...raw,\n      pairs: raw.pairs.map(RawSummaryPair.to),\n    };\n  }\n}\n\nexport type Summary = Omit<RawSummaryResponse, \"pairs\"> & {\n  pairs: SummaryPair[];\n};\n\nexport type SummaryCoin = {\n  id: string; // moon\n  type: \"fungible-asset\" | \"coin-store\";\n  coinType?: MoveStructId; // 0x123...abc::moon_coin::MoonCoin\n  assetType?: Hex;\n  name: string; // Moon Coin\n  symbol: string; // MOON\n  decimals: number; // 6\n};\n\nexport type RawSummaryPair = {\n  id: string; // BTC_USD\n  name: string; // Bitcoin\n  type: \"crypto\" | \"forex\" | \"stable\" | \"commodity\";\n  pairType: MoveStructId; // 0x123...abc::pair_types::ETH_USD\n  symbol: string; // BTC/USD\n  symbolLong: string; // BTC / USD\n  decimals: number;\n  isMarketOpen: boolean;\n  listingDate?: string; // date of listing, is null if listed\n  visible?: boolean; // market list visible flag\n};\n\nexport namespace RawSummaryPair {\n  export function to(raw: RawSummaryPair): SummaryPair {\n    return {\n      ...raw,\n      listingDate: raw.listingDate ? new Date(raw.listingDate) : undefined,\n    };\n  }\n}\n\nexport type SummaryPair = Omit<RawSummaryPair, \"listingDate\"> & {\n  listingDate?: Date;\n};\n\nexport type SummaryPrice = {\n  id: string; // BTC_USD\n  price?: number; // 10000\n  price24ago?: number;\n};\n","import type { MerkleConfig } from \"@/config\";\nimport type { Hex } from \"@/types\";\nimport {\n  type FeepayerResponse,\n  RawOrder,\n  RawPairInfoResponse,\n  RawPairStateResponse,\n  RawPosition,\n  RawTradeHistory,\n  type Summary,\n  type TradeHistory,\n} from \"@/types/api\";\nimport { RawSummaryResponse } from \"@/types/api\";\nimport type { Order, PairInfo, PairState, Position } from \"@/types/trading\";\nimport { version as VERSION } from \"package.json\";\n\n/**\n * @description Get summary\n * @returns Summary\n */\nexport async function getSummary(args: {\n  merkleConfig: MerkleConfig;\n}): Promise<Summary> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawSummaryResponse>(\n    `${baseURL}/v1/summary`,\n    fetchFn,\n  );\n  return RawSummaryResponse.to(response);\n}\n\n/**\n * @description Get pair info\n * @param pairId - Pair ID example: `BTC_USD`\n * @returns Pair info\n */\nexport async function getPairInfo(args: {\n  merkleConfig: MerkleConfig;\n  pairId: string;\n}): Promise<PairInfo> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawPairInfoResponse>(\n    `${baseURL}/v1/indexer/trading/pairinfo/${args.pairId}`,\n    fetchFn,\n  );\n  return RawPairInfoResponse.to(response);\n}\n\n/**\n * @description Get all pair info\n * @returns All pair info\n */\nexport async function getAllPairInfos(args: {\n  merkleConfig: MerkleConfig;\n}): Promise<PairInfo[]> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawPairInfoResponse[]>(\n    `${baseURL}/v1/indexer/trading/pairinfo`,\n    fetchFn,\n  );\n  return response.map(RawPairInfoResponse.to);\n}\n\n/**\n * @description Get pair state\n * @param pairId - Pair ID example: `BTC_USD`\n * @returns Pair state\n */\nexport async function getPairState(args: {\n  merkleConfig: MerkleConfig;\n  pairId: string;\n}): Promise<PairState> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawPairStateResponse>(\n    `${baseURL}/v1/indexer/trading/pairstate/${args.pairId}`,\n    fetchFn,\n  );\n  return RawPairStateResponse.to(response);\n}\n\n/**\n * @description Get all pair state\n * @returns All pair state\n */\nexport async function getAllPairStates(args: {\n  merkleConfig: MerkleConfig;\n}): Promise<PairState[]> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawPairStateResponse[]>(\n    `${baseURL}/v1/indexer/trading/pairstate`,\n    fetchFn,\n  );\n  return response.map(RawPairStateResponse.to);\n}\n\n/**\n * @description Get orders\n * @param address - Address\n * @returns Orders\n */\nexport async function getOrders(args: {\n  merkleConfig: MerkleConfig;\n  address: Hex;\n}): Promise<Order[]> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawOrder[]>(\n    `${baseURL}/v1/indexer/trading/order/${args.address}`,\n    fetchFn,\n  );\n  return response.map(RawOrder.to);\n}\n\n/**\n * @description Get positions\n * @param address - Address\n * @returns Positions\n */\nexport async function getPositions(args: {\n  merkleConfig: MerkleConfig;\n  address: Hex;\n}): Promise<Position[]> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<RawPosition[]>(\n    `${baseURL}/v1/indexer/trading/position/${args.address}`,\n    fetchFn,\n  );\n  return response.map(RawPosition.to);\n}\n\n/**\n * @description Get trading history\n * @param address - Address\n * @returns Trading history\n */\nexport async function getTradingHistory(args: {\n  merkleConfig: MerkleConfig;\n  address: Hex;\n}): Promise<TradeHistory[]> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await get<{ items: RawTradeHistory[] }>(\n    `${baseURL}/v1/trade/${args.address}`,\n    fetchFn,\n  );\n  return response.items.map(RawTradeHistory.to);\n}\n\n/**\n * @description Post feepayer\n * @param txHex - Transaction\n * @param senderAuthenticator - Sender authenticator\n * @returns Feepayer response\n */\nexport async function postFeepayer(args: {\n  merkleConfig: MerkleConfig;\n  txHex: string;\n  senderAuthenticator: string;\n}): Promise<FeepayerResponse> {\n  const { fetchFn, baseURL } = args.merkleConfig;\n  const response = await post<FeepayerResponse>(\n    `${baseURL}/v1/feepayer/sendTransaction`,\n    { tx: args.txHex, senderAuthenticator: args.senderAuthenticator },\n    fetchFn,\n  );\n  return response;\n}\n\nconst get = async <T>(\n  url: string,\n  fetchFn?: typeof fetch,\n  options?: RequestInit,\n): Promise<T> => fetchAPI(fetchFn ?? fetch, \"GET\", url, undefined, options);\n\nconst post = async <T>(\n  url: string,\n  body: Record<string, unknown>,\n  fetchFn?: typeof fetch,\n  options?: RequestInit,\n): Promise<T> =>\n  fetchAPI(fetchFn ?? fetch, \"POST\", url, body, {\n    ...options,\n    headers: { \"Content-Type\": \"application/json\" },\n  });\n\nconst fetchAPI = async <T>(\n  fetchFn: typeof fetch,\n  method: \"GET\" | \"POST\",\n  url: string,\n  body?: Record<string, unknown>,\n  options?: RequestInit,\n): Promise<T> => {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"x-merkle-client\": `merkle-ts-sdk@${VERSION}`,\n    ...options?.headers,\n  };\n  const response = await fetchFn(url, {\n    ...options,\n    headers,\n    method,\n    body: body ? JSON.stringify(body) : undefined,\n  });\n  if (!response.ok) {\n    throw new Error(\n      `Request failed: ${response.status} ${response.statusText}`,\n    );\n  }\n  const data = (await response.json()) as T;\n  return data;\n};\n","import type { Hex } from \"@/types\";\nimport type { AccountFeed, PriceFeed } from \"@/types/api/wsapi\";\n\nexport type WSAPISessionConfig = {\n  wsURL: string;\n  WebSocketCtor?: new (\n    url: string | URL,\n    protocols?: string | string[],\n  ) => WebSocket;\n};\n\ntype SubscriptionController = Pick<\n  ReadableStreamDefaultController,\n  \"enqueue\" | \"error\"\n>;\n\nexport class WSAPISession {\n  private ws: WebSocket;\n  private openPromise: Promise<void>;\n  private subscriptions: { [key: string]: SubscriptionController[] };\n\n  constructor(config: WSAPISessionConfig) {\n    const WebSocketCtor = config.WebSocketCtor ?? WebSocket;\n    this.ws = new WebSocketCtor(config.wsURL);\n    this.openPromise = new Promise((resolve, reject) => {\n      this.ws.addEventListener(\"open\", () => resolve());\n      this.ws.addEventListener(\"close\", (e) =>\n        reject(new Error(`WebSocket closed: ${e.reason}`)),\n      );\n    });\n    this.ws.addEventListener(\"message\", (e) => this.handleMessage(e));\n    this.ws.addEventListener(\"close\", (e) => this.handleClose(e));\n    this.subscriptions = {};\n  }\n\n  async connect() {\n    if (this.ws.readyState === WebSocket.OPEN) return;\n    return this.openPromise;\n  }\n\n  disconnect() {\n    this.ws.close();\n  }\n\n  private handleMessage(e: MessageEvent) {\n    const data = JSON.parse(e.data) as {\n      type: string;\n      key: string;\n      data: any;\n    };\n    const key = data.key;\n    const controllers = (this.subscriptions[key] ??= []);\n    for (const controller of controllers) {\n      controller.enqueue(data.data);\n    }\n  }\n\n  private handleClose(e: CloseEvent) {\n    const controllers = Object.values(this.subscriptions).flat();\n    for (const controller of controllers) {\n      controller.error(new Error(`WebSocket closed: ${e.reason}`));\n    }\n    this.subscriptions = {};\n  }\n\n  subscribePriceFeed(pairId: string): AsyncIterable<PriceFeed> {\n    return this.subscribe<PriceFeed>(`price:${pairId}`);\n  }\n\n  subscribeAccountFeed(account: Hex): AsyncIterable<AccountFeed> {\n    return this.subscribe<AccountFeed>(`account:${account}:events`);\n  }\n\n  subscribe<T>(key: string): AsyncIterable<T> {\n    const t = this;\n\n    let ctlr: ReadableStreamDefaultController<T> | undefined;\n\n    const stream = new ReadableStream({\n      async start(controller) {\n        ctlr = controller;\n        t.ws.send(JSON.stringify({ type: \"sub\", key }));\n        (t.subscriptions[key] ??= []).push(controller);\n      },\n      async cancel() {\n        if (!ctlr) return;\n        const controllers = t.subscriptions[key] ?? [];\n        t.subscriptions[key] = controllers.filter((c) => c !== ctlr);\n        if (controllers.length === 0) {\n          t.ws.send(JSON.stringify({ type: \"unsub\", key }));\n        }\n        ctlr.close();\n      },\n    });\n    return stream;\n  }\n}\n","import type { Simplify } from \"type-fest\";\n\nimport type { Hex, MoveStructId, TableHandle } from \"@/types\";\nimport type { Decimal } from \"@/utils/decimal\";\n\nexport namespace Decimals {\n  export const COLLATERAL = 6;\n  export const PRICE = 10;\n  export const BPS = 4;\n  export const PRECISION = 6;\n  export const FUNDING_PRECISION = 8;\n\n  export type Collateral = Decimal<typeof Decimals.COLLATERAL>;\n  export type Price = Decimal<typeof Decimals.PRICE>;\n  export type Bps = Decimal<typeof Decimals.BPS>;\n  export type Precision = Decimal<typeof Decimals.PRECISION>;\n  export type FundingPrecision = Decimal<typeof Decimals.FUNDING_PRECISION>;\n\n  export type APT = Decimal<8>;\n}\n\nexport type Order = {\n  version: number;\n  timestamp: Date;\n\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  orderId: number;\n\n  /** @deprecated */ uid: number;\n  user: Hex;\n  sizeDelta: Decimals.Collateral;\n  collateralDelta: Decimals.Collateral;\n  price: Decimals.Price;\n  isLong: boolean;\n  isIncrease: boolean;\n  isMarket: boolean;\n  canExecuteAbovePrice: boolean;\n  stopLossTriggerPrice: Decimals.Price;\n  takeProfitTriggerPrice: Decimals.Price;\n  createdTimestamp: number;\n};\n\nexport type Position = {\n  version: number;\n  timestamp: Date;\n\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  isLong: boolean;\n  user: Hex;\n\n  uid: number;\n  size: Decimals.Collateral;\n  collateral: Decimals.Collateral;\n  avgPrice: Decimals.Price;\n  lastExecuteTimestamp: number;\n  accRolloverFeePerCollateral: Decimals.FundingPrecision;\n  /** cumulative funding rate per size */\n  accFundingFeePerSize: Decimals.FundingPrecision;\n  stopLossTriggerPrice: Decimals.Price;\n  takeProfitTriggerPrice: Decimals.Price;\n};\n\nexport type PairInfo = Simplify<\n  { version: number; timestamp: Date } & PairInfo.V1 & PairInfo.V2\n>;\n\nexport namespace PairInfo {\n  export type V1 = {\n    versionV1: number;\n    timestampV1: Date;\n\n    pairType: MoveStructId;\n    collateralType: MoveStructId;\n\n    paused: boolean;\n    minLeverage: Decimals.Precision;\n    maxLeverage: Decimals.Precision;\n    makerFee: Decimals.Collateral;\n    takerFee: Decimals.Collateral;\n    rolloverFeePerTimestamp: Decimals.FundingPrecision;\n    skewFactor: Decimals.Collateral;\n    maxFundingVelocity: Decimals.FundingPrecision;\n    maxOpenInterest: Decimals.Collateral;\n    executeTimeLimit: number;\n    liquidateThreshold: Decimals.Bps;\n    maximumProfit: Decimals.Bps;\n    minimumOrderCollateral: Decimals.Collateral;\n    minimumPositionCollateral: Decimals.Collateral;\n    minimumPositionSize: Decimals.Collateral;\n    maximumPositionCollateral: Decimals.Collateral;\n    executionFee: Decimals.APT;\n  };\n\n  export type V2 = {\n    versionV2: number;\n    timestampV2: Date;\n\n    pairType: MoveStructId;\n    collateralType: MoveStructId;\n\n    maximumSkewLimit: Decimals.Collateral;\n    cooldownPeriodSecond: number;\n  };\n\n  export const mergeVersions = (v1: V1, v2: V2): PairInfo => ({\n    version: Math.max(v1.versionV1, v2.versionV2),\n    timestamp: new Date(\n      Math.max(v1.timestampV1.getTime(), v2.timestampV2.getTime()),\n    ),\n    ...v1,\n    ...v2,\n  });\n}\n\nexport type PairState = {\n  version: number;\n  timestamp: Date;\n\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n\n  nextOrderId: number;\n  longOpenInterest: Decimals.Collateral;\n  shortOpenInterest: Decimals.Collateral;\n  fundingRate: Decimals.FundingPrecision;\n  accFundingFeePerSize: Decimals.FundingPrecision;\n  accRolloverFeePerCollateral: Decimals.FundingPrecision;\n  lastAccrueTimestamp: number;\n\n  // table handles\n  orders: TableHandle;\n  longPositions: TableHandle;\n  shortPositions: TableHandle;\n};\n\nexport type PlaceOrderEvent = {\n  version: number;\n  timestamp: Date;\n  eventIndex: number;\n\n  /** @deprecated always 0 */ uid: number;\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  user: Hex;\n  orderId: number;\n  sizeDelta: Decimals.Collateral;\n  collateralDelta: Decimals.Collateral;\n  price: Decimals.Price;\n  isLong: boolean;\n  isIncrease: boolean;\n  isMarket: boolean;\n};\n\nexport type CancelOrderEvent = {\n  version: number;\n  timestamp: Date;\n  eventIndex: number;\n\n  uid: number;\n  eventType: CancelOrderEvent.EventType;\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  user: Hex;\n  orderId: number;\n  sizeDelta: Decimals.Collateral;\n  collateralDelta: Decimals.Collateral;\n  price: Decimals.Price;\n  isLong: boolean;\n  isIncrease: boolean;\n  isMarket: boolean;\n};\n\nexport namespace CancelOrderEvent {\n  export const eventTypes = [\n    \"cancel_order_by_user\",\n    \"cancel_order_max_leverage\",\n    \"cancel_order_under_min_leverage\",\n    \"cancel_order_unexecutable_market_order\",\n    \"cancel_order_not_enough_collateral\",\n    \"cancel_order_not_enough_size\",\n    \"cancel_order_expired\",\n    \"cancel_order_over_max_interest\",\n    \"cancel_order_over_max_collateral\",\n    \"cancel_order_over_max_skew_limit\",\n  ] as const;\n  export type EventType = (typeof eventTypes)[number];\n}\n\nexport type PositionEvent = {\n  version: number;\n  timestamp: Date;\n  eventIndex: number;\n\n  uid: number;\n  eventType: PositionEvent.EventType;\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  user: Hex;\n  orderId: number;\n  isLong: boolean;\n  price: Decimals.Price;\n  originalSize: Decimals.Collateral;\n  sizeDelta: Decimals.Collateral;\n  originalCollateral: Decimals.Collateral;\n  collateralDelta: Decimals.Collateral;\n  isIncrease: boolean;\n  isPartial: boolean;\n  pnlWithoutFee: Decimals.Collateral;\n  isProfit: boolean;\n  entryExitFee: Decimals.Collateral;\n  fundingFee: Decimals.Collateral;\n  rolloverFee: Decimals.Collateral;\n  longOpenInterest: Decimals.Collateral;\n  shortOpenInterest: Decimals.Collateral;\n};\n\nexport namespace PositionEvent {\n  export const eventTypes = [\n    \"position_open\",\n    \"position_update\",\n    \"position_close\",\n    \"position_liquidate\",\n    \"position_take_profit\",\n    \"position_stop_loss\",\n  ];\n  export type EventType = (typeof eventTypes)[number];\n}\n\nexport type UpdateTPSLEvent = {\n  version: number;\n  timestamp: Date;\n  eventIndex: number;\n\n  uid: number;\n  pairType: MoveStructId;\n  collateralType: MoveStructId;\n  user: Hex;\n  isLong: boolean;\n  takeProfitTriggerPrice: Decimals.Price;\n  stopLossTriggerPrice: Decimals.Price;\n};\n","import {\n  Decimals,\n  type Order,\n  type PairInfo,\n  type PairState,\n  type Position,\n} from \"@/types/trading\";\nimport {\n  type Decimal,\n  abs,\n  add,\n  avg,\n  dec,\n  dec0,\n  div,\n  min,\n  mul,\n  neg,\n  one,\n  sign,\n  sub,\n} from \"@/utils/decimal\";\n\nconst DAY_SECONDS = 86400n as Decimal<0>;\n\nexport const PRECISION = one(Decimals.PRECISION);\nconst FUNDING_PRECISION = one(Decimals.FUNDING_PRECISION);\nconst FUNDING_PADDING_PRECISION = one(11);\n\nexport type Timestamp = bigint | Decimal<0>;\n\n//////////////////////////////////////////////////////\n// Contract calc functions (trading-calc.move)\n//////////////////////////////////////////////////////\n\n/** Calculates new `avgPrice` for increased position */\nexport const calcNewPrice = ({\n  position: { avgPrice, size },\n  increaseOrder: { sizeDelta },\n  price,\n}: {\n  position: Pick<Position, \"avgPrice\" | \"size\">;\n  increaseOrder: Pick<Order, \"sizeDelta\">;\n  price: Decimals.Price;\n}): Decimals.Price => {\n  if (size === 0n) return price;\n  if (sizeDelta === 0n) return avgPrice;\n  const padding = one(18);\n  const newPrice = div(\n    mul(add(size, sizeDelta), padding),\n    add(div(mul(size, padding), avgPrice), div(mul(sizeDelta, padding), price)),\n  );\n  return newPrice;\n};\n\nexport const calcPnlWithoutFee = ({\n  position: { avgPrice, isLong },\n  executePrice,\n  decreaseOrder: { sizeDelta },\n}: {\n  position: Pick<Position, \"avgPrice\" | \"isLong\">;\n  executePrice: Decimals.Price;\n  decreaseOrder: Pick<Order, \"sizeDelta\">;\n}): Decimals.Collateral => {\n  if (avgPrice === executePrice) return dec(0n);\n  const priceGap = sub(executePrice, avgPrice);\n  const pnl = div(\n    mul(div(mul(priceGap, PRECISION), avgPrice), sizeDelta),\n    PRECISION,\n  );\n  return mul(pnl, one(0, isLong));\n};\n\n/**\n * Returns the estimated execute price for given order.\n * For current price, use `calcPriceInfo`\n * For price impact, use `calcPriceImpactInfo`\n **/\nexport const calcPriceImpact = ({\n  pairInfo: { skewFactor },\n  pairState: { longOpenInterest, shortOpenInterest },\n  idxPrice,\n  order: { sizeDelta, isLong, isIncrease } = {\n    sizeDelta: dec(0n),\n    isLong: true,\n    isIncrease: true,\n  },\n}: {\n  pairInfo: Pick<PairInfo, \"skewFactor\">;\n  pairState: Pick<PairState, \"longOpenInterest\" | \"shortOpenInterest\">;\n  idxPrice: Decimals.Price;\n  order?: Pick<Order, \"sizeDelta\" | \"isLong\" | \"isIncrease\">;\n}): Decimals.Price => {\n  if (skewFactor === 0n) return idxPrice;\n\n  const marketSkew = sub(longOpenInterest, shortOpenInterest);\n  const price = add(idxPrice, div(mul(idxPrice, marketSkew), skewFactor));\n\n  if (sizeDelta === 0n) return price;\n\n  const newMarketSkew = add(\n    marketSkew,\n    mul(one(0, isLong === isIncrease), sizeDelta),\n  );\n  const newPrice = add(idxPrice, div(mul(idxPrice, newMarketSkew), skewFactor));\n\n  const executePrice = avg(price, newPrice);\n  return executePrice;\n};\n\nexport const calcRolloverFee = ({\n  position: { collateral, accRolloverFeePerCollateral: acc },\n  currentAccRolloverFeePerCollateral: currentAcc,\n}: {\n  position: Pick<Position, \"collateral\" | \"accRolloverFeePerCollateral\">;\n  currentAccRolloverFeePerCollateral: Decimals.FundingPrecision;\n}): Decimals.Collateral =>\n  div(mul(sub(currentAcc, acc), collateral), FUNDING_PRECISION);\n\nexport const calcFundingRate = ({\n  pairInfo: { skewFactor, maxFundingVelocity },\n  pairState: { longOpenInterest, shortOpenInterest, fundingRate },\n  timeDeltaSec,\n}: {\n  pairInfo: Pick<PairInfo, \"skewFactor\" | \"maxFundingVelocity\">;\n  pairState: Pick<\n    PairState,\n    \"longOpenInterest\" | \"shortOpenInterest\" | \"fundingRate\"\n  >;\n  timeDeltaSec: Timestamp;\n}): Decimals.FundingPrecision => {\n  const marketSkew = sub(longOpenInterest, shortOpenInterest);\n  const skewRate = min(\n    skewFactor === 0n\n      ? (0n as typeof FUNDING_PADDING_PRECISION)\n      : div(mul(marketSkew, FUNDING_PADDING_PRECISION), skewFactor),\n    FUNDING_PADDING_PRECISION,\n  );\n  const velocity = div(\n    mul(skewRate, maxFundingVelocity),\n    FUNDING_PADDING_PRECISION,\n  );\n  const velocityTimeDelta = div(mul(velocity, dec0(timeDeltaSec)), DAY_SECONDS);\n  const currentFundingRate = add(fundingRate, velocityTimeDelta);\n  return currentFundingRate;\n};\n\nexport const calcAccFundingFeePerSize = ({\n  pairState: { fundingRate, accFundingFeePerSize },\n  currentFundingRate,\n  timeDeltaSec,\n}: {\n  pairState: Pick<PairState, \"fundingRate\" | \"accFundingFeePerSize\">;\n  currentFundingRate: Decimals.FundingPrecision;\n  timeDeltaSec: Timestamp;\n}): Decimals.FundingPrecision => {\n  const avgFundingRate = avg(fundingRate, currentFundingRate);\n  const unrecordedFundingFeePerSize = div(\n    mul(avgFundingRate, dec0(timeDeltaSec)),\n    DAY_SECONDS,\n  );\n  const currentAccFundingFeePerSize = add(\n    accFundingFeePerSize,\n    unrecordedFundingFeePerSize,\n  );\n  return currentAccFundingFeePerSize;\n};\n\n/**\n * NOTE: positive funding fee means the user pays funding fee.\n * Different from contract `calc_funding_fee`, which returns the funding fee the user receives.\n */\nexport const calcFundingFee = ({\n  position: { size, isLong, accFundingFeePerSize: acc },\n  currentAccFundingFeePerSize: currentAcc,\n}: {\n  position: Pick<Position, \"size\" | \"isLong\" | \"accFundingFeePerSize\">;\n  currentAccFundingFeePerSize: Decimals.FundingPrecision;\n}): Decimals.Collateral => {\n  const fundingFee = div(mul(size, sub(currentAcc, acc)), FUNDING_PRECISION);\n  return isLong ? fundingFee : neg(fundingFee);\n};\n\nexport const calcMakerTakerFee = ({\n  pairInfo: { makerFee: makerRate, takerFee: takerRate },\n  pairState: { longOpenInterest, shortOpenInterest },\n  order: { sizeDelta, isLong, isIncrease },\n}: {\n  pairInfo: Pick<PairInfo, \"makerFee\" | \"takerFee\">;\n  pairState: Pick<PairState, \"longOpenInterest\" | \"shortOpenInterest\">;\n  order: Pick<Order, \"sizeDelta\" | \"isLong\" | \"isIncrease\">;\n}): Decimals.Collateral => {\n  const marketSkew = sub(longOpenInterest, shortOpenInterest);\n  const nextMarketSkew = add(\n    marketSkew,\n    mul(one(0, isLong === isIncrease), sizeDelta),\n  );\n  if (sign(marketSkew) === sign(nextMarketSkew)) {\n    const isTaker = (isLong === isIncrease) === marketSkew > 0n;\n    return div(mul(sizeDelta, isTaker ? takerRate : makerRate), PRECISION);\n  }\n\n  const flippedTakerRate = div(\n    mul(sub(sizeDelta, abs(marketSkew)), PRECISION),\n    sizeDelta,\n  );\n  const flippedMakerRate = sub(PRECISION, flippedTakerRate);\n  const takerFee = div(\n    mul(div(mul(sizeDelta, flippedTakerRate), PRECISION), takerRate),\n    PRECISION,\n  );\n  const makerFee = div(\n    mul(div(mul(sizeDelta, flippedMakerRate), PRECISION), makerRate),\n    PRECISION,\n  );\n  return add(takerFee, makerFee);\n};\n","import { PRICE_MAX, PRICE_MIN } from \"@/aptos/payloads\";\nimport {\n  PRECISION,\n  type Timestamp,\n  calcAccFundingFeePerSize,\n  calcFundingFee,\n  calcFundingRate,\n  calcMakerTakerFee,\n  calcPnlWithoutFee,\n  calcPriceImpact,\n  calcRolloverFee,\n} from \"@/calc/trading\";\nimport type {\n  Decimals,\n  Order,\n  PairInfo,\n  PairState,\n  Position,\n} from \"@/types/trading\";\nimport {\n  add,\n  dec,\n  dec0,\n  div,\n  fromNumber,\n  gte,\n  lte,\n  mul,\n  one,\n  sub,\n} from \"@/utils/decimal\";\n\ntype PriceImpactInfo = {\n  price: Decimals.Price;\n  priceImpact: Decimals.Price;\n  priceImpactRatio: Decimals.Precision;\n};\n\nexport const calcPriceImpactInfo = ({\n  pairInfo,\n  pairState,\n  idxPrice,\n  order,\n}: {\n  pairInfo: Pick<PairInfo, \"skewFactor\">;\n  pairState: Pick<PairState, \"longOpenInterest\" | \"shortOpenInterest\">;\n  idxPrice: Decimals.Price;\n  order?: Pick<Order, \"sizeDelta\" | \"isLong\" | \"isIncrease\">;\n}): PriceImpactInfo => {\n  const price = calcPriceImpact({ pairInfo, pairState, idxPrice, order });\n  const priceImpact = sub(price, idxPrice);\n  const priceImpactRatio =\n    idxPrice > 0n ? div(mul(priceImpact, PRECISION), idxPrice) : dec<6>(0n);\n  return { price, priceImpact, priceImpactRatio };\n};\n\nexport type FundingInfo = {\n  currentFundingRate: Decimals.FundingPrecision;\n  currentAccFundingFeePerSize: Decimals.FundingPrecision;\n};\n\nexport const calcFundingInfo = ({\n  pairInfo,\n  pairState,\n  timestampSec,\n}: {\n  pairInfo: Pick<PairInfo, \"skewFactor\" | \"maxFundingVelocity\">;\n  pairState: Pick<\n    PairState,\n    | \"longOpenInterest\"\n    | \"shortOpenInterest\"\n    | \"fundingRate\"\n    | \"accFundingFeePerSize\"\n    | \"lastAccrueTimestamp\"\n  >;\n  timestampSec: Timestamp;\n}): FundingInfo => {\n  const timeDeltaSec = sub(\n    dec0(timestampSec),\n    dec0(BigInt(pairState.lastAccrueTimestamp)),\n  );\n  const currentFundingRate = calcFundingRate({\n    pairInfo,\n    pairState,\n    timeDeltaSec,\n  });\n  const currentAccFundingFeePerSize = calcAccFundingFeePerSize({\n    pairState,\n    currentFundingRate,\n    timeDeltaSec,\n  });\n  return {\n    currentFundingRate,\n    currentAccFundingFeePerSize,\n  } satisfies FundingInfo;\n};\n\nexport const calcAccRolloverFeePerCollateral = ({\n  pairInfo: { rolloverFeePerTimestamp },\n  pairState: { lastAccrueTimestamp, accRolloverFeePerCollateral },\n  timestampSec,\n}: {\n  pairInfo: Pick<PairInfo, \"rolloverFeePerTimestamp\">;\n  pairState: Pick<\n    PairState,\n    \"lastAccrueTimestamp\" | \"accRolloverFeePerCollateral\"\n  >;\n  timestampSec: Timestamp;\n}): Decimals.FundingPrecision => {\n  const deltaSec = sub(dec0(timestampSec), dec0(BigInt(lastAccrueTimestamp)));\n  const currentAccRolloverFeePerCollateral = add(\n    accRolloverFeePerCollateral,\n    mul(deltaSec, rolloverFeePerTimestamp),\n  );\n  return currentAccRolloverFeePerCollateral;\n};\n\nexport const calcExitFee = ({\n  pairInfo,\n  pairState,\n  position: { size, isLong },\n}: {\n  pairInfo: Pick<PairInfo, \"makerFee\" | \"takerFee\">;\n  pairState: Pick<PairState, \"longOpenInterest\" | \"shortOpenInterest\">;\n  position: Pick<Position, \"size\" | \"isLong\">;\n}): Decimals.Collateral =>\n  calcMakerTakerFee({\n    pairInfo,\n    pairState,\n    order: { sizeDelta: size, isLong: isLong, isIncrease: false },\n  });\n\ntype PositionFees = {\n  total: Decimals.Collateral;\n  exitFee: Decimals.Collateral;\n  rolloverFee: Decimals.Collateral;\n  fundingFee: Decimals.Collateral;\n};\nexport const calcPositionFees = ({\n  pairInfo,\n  pairState,\n  position,\n  timestampSec,\n}: {\n  pairInfo: Pick<\n    PairInfo,\n    | \"skewFactor\"\n    | \"maxFundingVelocity\"\n    | \"rolloverFeePerTimestamp\"\n    | \"makerFee\"\n    | \"takerFee\"\n  >;\n  pairState: Pick<\n    PairState,\n    | \"longOpenInterest\"\n    | \"shortOpenInterest\"\n    | \"fundingRate\"\n    | \"accFundingFeePerSize\"\n    | \"accRolloverFeePerCollateral\"\n    | \"lastAccrueTimestamp\"\n  >;\n  position: Pick<\n    Position,\n    | \"size\"\n    | \"collateral\"\n    | \"isLong\"\n    | \"avgPrice\"\n    | \"accFundingFeePerSize\"\n    | \"accRolloverFeePerCollateral\"\n  >;\n  timestampSec: Timestamp;\n}): PositionFees => {\n  const currentAccRolloverFeePerCollateral = calcAccRolloverFeePerCollateral({\n    pairInfo,\n    pairState,\n    timestampSec,\n  });\n  const rolloverFee = calcRolloverFee({\n    position,\n    currentAccRolloverFeePerCollateral,\n  });\n\n  const { currentAccFundingFeePerSize } = calcFundingInfo({\n    pairInfo,\n    pairState,\n    timestampSec,\n  });\n  const fundingFee = calcFundingFee({ position, currentAccFundingFeePerSize });\n  const exitFee = calcExitFee({ pairInfo, pairState, position });\n\n  const total = add(exitFee, add(fundingFee, rolloverFee));\n\n  return { total, exitFee, fundingFee, rolloverFee } satisfies PositionFees;\n};\n\ntype PnlInfo = {\n  pnl: Decimals.Collateral;\n  pnlRate: Decimals.Collateral;\n  pnlWithFee: Decimals.Collateral;\n  pnlWithFeeRate: Decimals.Collateral;\n};\n\nexport const calcPnlInfo = ({\n  position: { size, collateral, isLong, avgPrice },\n  feesTotal,\n  executePrice,\n}: {\n  position: Pick<Position, \"size\" | \"collateral\" | \"isLong\" | \"avgPrice\">;\n  feesTotal: Decimals.Collateral;\n  executePrice: Decimals.Price;\n}): PnlInfo => {\n  const pnl = calcPnlWithoutFee({\n    position: { avgPrice, isLong },\n    decreaseOrder: { sizeDelta: size },\n    executePrice,\n  });\n  const pnlRate = div(mul(pnl, PRECISION), collateral);\n  const pnlWithFee = sub(pnl, feesTotal);\n  const pnlWithFeeRate = div(mul(pnlWithFee, PRECISION), collateral);\n\n  return { pnl, pnlRate, pnlWithFee, pnlWithFeeRate } satisfies PnlInfo;\n};\n\nexport const calcEntryByPaySize = (\n  pay: Decimals.Collateral,\n  leverage: number,\n  isLong: boolean,\n  pairInfo: PairInfo,\n  pairState: PairState,\n): {\n  collateral: Decimals.Collateral;\n  size: Decimals.Collateral;\n  fee: Decimals.Collateral;\n} => {\n  if (pay === 0n)\n    return {\n      collateral: dec<6>(0n),\n      size: dec<6>(0n),\n      fee: dec<6>(0n),\n    };\n  const estSizePay = mul(pay, fromNumber(leverage, 0));\n  const estEntryFee = calcMakerTakerFee({\n    pairInfo,\n    pairState,\n    order: {\n      sizeDelta: estSizePay,\n      isLong: isLong,\n      isIncrease: true,\n    },\n  });\n  const estCollateral = sub(pay, estEntryFee);\n  const estSizeFromEstCollateral = mul(estCollateral, fromNumber(leverage, 0));\n  const predEntryFee = calcMakerTakerFee({\n    pairInfo,\n    pairState,\n    order: {\n      sizeDelta: estSizeFromEstCollateral,\n      isLong: isLong,\n      isIncrease: true,\n    },\n  });\n  const predCollateral = sub(pay, predEntryFee);\n  const predSize = mul(predCollateral, fromNumber(leverage, 0));\n\n  return {\n    collateral: pay,\n    size: predSize,\n    fee: predEntryFee,\n  };\n};\n\n/**\n * Calculate the slippage applied price for orders\n *\n * @param markPrice - The mark price\n * @param isIncrease - Whether the order is an increase order\n * @param isLong - Whether the position is long\n * @param slippageBps - The slippage in basis points\n * @returns The slippage price\n */\nexport const calcSlippagePrice = (\n  markPrice: Decimals.Price,\n  isIncrease: boolean,\n  isLong: boolean,\n  slippageBps: Decimals.Bps, // 10000 = 100%, 0.5% = 50\n): Decimals.Price => {\n  const signed = (isIncrease: boolean, isLong: boolean) =>\n    isIncrease ? (isLong ? 1n : -1n) : isLong ? -1n : 1n;\n  const slippageFactor = dec<4>(\n    one(4) + signed(isIncrease, isLong) * slippageBps,\n  );\n  const adjustedPrice = mul(markPrice, slippageFactor);\n  const orderPrice = div(adjustedPrice, one(4));\n\n  if (lte(orderPrice, PRICE_MIN)) return PRICE_MIN;\n  if (gte(orderPrice, PRICE_MAX)) return PRICE_MAX;\n\n  return orderPrice;\n};\n","import {\n  AccountAddress,\n  type AccountAddressInput,\n  type EntryFunctionABI,\n  type InputEntryFunctionData,\n  type MoveFunction,\n  type TypeTag,\n  findFirstNonSignerArg,\n  parseTypeTag,\n} from \"@aptos-labs/ts-sdk\";\n\nimport { calcSlippagePrice } from \"@/calc/trading-utils\";\nimport type { Decimals, Hex } from \"@/types\";\nimport type { Summary } from \"@/types/api\";\nimport { raise } from \"@/utils\";\nimport * as decimals from \"@/utils/decimal\";\n\nexport const PRICE_MAX = (2n ** 64n - 1n) as Decimals.Price;\nexport const PRICE_MIN = 1n as Decimals.Price;\n\nexport function placeMarketOrder(args: {\n  summary: Summary;\n  /** pair id or pair type */\n  pair: string;\n  userAddress: AccountAddressInput;\n  sizeDelta: bigint;\n  collateralDelta: bigint;\n  slippage?: { markPrice: bigint; slippageBps: bigint };\n  isLong: boolean;\n  isIncrease: boolean;\n  stopLossTriggerPrice?: bigint;\n  takeProfitTriggerPrice?: bigint;\n  canExecuteAbovePrice?: boolean;\n  referrer?: AccountAddressInput;\n}) {\n  const price = args.slippage\n    ? calcSlippagePrice(\n        args.slippage.markPrice as Decimals.Price,\n        args.isIncrease,\n        args.isLong,\n        decimals.dec<4>(args.slippage.slippageBps),\n      )\n    : undefined;\n  return placeOrderV3({ ...args, price, isMarket: true });\n}\n\nexport function placeLimitOrder(args: {\n  summary: Summary;\n  /** pair id or pair type */\n  pair: string;\n  userAddress: AccountAddressInput;\n  sizeDelta: bigint;\n  collateralDelta: bigint;\n  price: bigint;\n  isLong: boolean;\n  isIncrease: boolean;\n  stopLossTriggerPrice?: bigint;\n  takeProfitTriggerPrice?: bigint;\n  canExecuteAbovePrice?: boolean;\n  referrer?: AccountAddressInput;\n}) {\n  return placeOrderV3({ ...args, isMarket: false });\n}\n\nfunction placeOrderV3(args: {\n  summary: Summary;\n  /** pair id or pair type */\n  pair: string;\n  collateralType?: string;\n  userAddress: AccountAddressInput;\n  sizeDelta: bigint;\n  collateralDelta: bigint;\n  /** if not provided, order will be market order without slippage */\n  price?: bigint;\n  isLong: boolean;\n  isIncrease: boolean;\n  isMarket: boolean;\n  stopLossTriggerPrice?: bigint;\n  takeProfitTriggerPrice?: bigint;\n  canExecuteAbovePrice?: boolean;\n  referrer?: AccountAddressInput;\n}) {\n  const merkleContract = args.summary.hostAddress;\n  const pairType = resolvePairType(args.pair, merkleContract);\n  const collateralType = usdcCollateralType(args.summary);\n\n  return {\n    function: `${merkleContract}::managed_trading::place_order_v3`,\n    typeArguments: [pairType, collateralType],\n    functionArguments: [\n      args.userAddress,\n      args.sizeDelta,\n      args.collateralDelta,\n      args.price ?? (args.isLong ? PRICE_MAX : PRICE_MIN),\n      args.isLong,\n      args.isIncrease,\n      args.isMarket,\n      args.stopLossTriggerPrice ?? (args.isLong ? PRICE_MIN : PRICE_MAX),\n      args.takeProfitTriggerPrice ?? (args.isLong ? PRICE_MAX : PRICE_MIN),\n      args.canExecuteAbovePrice ?? !args.isLong,\n      args.referrer ?? AccountAddress.ZERO,\n    ],\n    abi: parseAbi({\n      generic_type_params: [{ constraints: [] }, { constraints: [] }],\n      params: [\n        \"&signer\",\n        \"address\",\n        \"u64\",\n        \"u64\",\n        \"u64\",\n        \"bool\",\n        \"bool\",\n        \"bool\",\n        \"u64\",\n        \"u64\",\n        \"bool\",\n        \"address\",\n      ],\n    }),\n  } satisfies InputEntryFunctionData;\n}\n\nexport function cancelOrder(args: {\n  summary: Summary;\n  /** pair id or pair type */\n  pair: string;\n  userAddress: Hex;\n  orderId: bigint;\n}) {\n  const merkleContract = args.summary.hostAddress;\n  const pairType = resolvePairType(args.pair, merkleContract);\n  const collateralType = usdcCollateralType(args.summary);\n\n  return {\n    function: `${merkleContract}::managed_trading::cancel_order_v3`,\n    typeArguments: [pairType, collateralType],\n    functionArguments: [args.userAddress, args.orderId],\n    abi: parseAbi({\n      generic_type_params: [{ constraints: [] }, { constraints: [] }],\n      params: [\"&signer\", \"address\", \"u64\"],\n    }),\n  } satisfies InputEntryFunctionData;\n}\n\nexport function updateTPSL(args: {\n  summary: Summary;\n  /** pair id or pair type */\n  pair: string;\n  userAddress: AccountAddressInput;\n  isLong: boolean;\n  stopLossTriggerPrice: bigint;\n  takeProfitTriggerPrice: bigint;\n}) {\n  const merkleContract = args.summary.hostAddress;\n  const pairType = resolvePairType(args.pair, merkleContract);\n  const collateralType = usdcCollateralType(args.summary);\n\n  return {\n    function: `${merkleContract}::managed_trading::update_position_tp_sl_v3`,\n    typeArguments: [pairType, collateralType],\n    functionArguments: [\n      args.userAddress,\n      args.isLong,\n      args.takeProfitTriggerPrice,\n      args.stopLossTriggerPrice,\n    ],\n    abi: parseAbi({\n      generic_type_params: [{ constraints: [] }, { constraints: [] }],\n      params: [\"&signer\", \"address\", \"bool\", \"u64\", \"u64\"],\n    }),\n  } satisfies InputEntryFunctionData;\n}\n\nexport function testnetFaucetUSDC(args: { summary: Summary; amount: bigint }) {\n  const merkleContract = args.summary.hostAddress;\n  return {\n    function: `${merkleContract}::test_trading::faucet_native_usdc`,\n    functionArguments: [args.amount],\n  } satisfies InputEntryFunctionData;\n}\n\nfunction resolvePairType(pairIdOrType: string, merkleContract: string) {\n  if (pairIdOrType.includes(\"::\")) return pairIdOrType;\n  return `${merkleContract}::pair_types::${pairIdOrType}`;\n}\n\nfunction usdcCollateralType(summary: Summary) {\n  return summary.coins.find((coin) => coin.id === \"usdc\")?.coinType ?? raise();\n}\n\ntype FunctionAbi = Pick<MoveFunction, \"generic_type_params\" | \"params\">;\n\nconst parseAbi = (functionAbi: FunctionAbi) => {\n  const numSigners = findFirstNonSignerArg(functionAbi as MoveFunction);\n  const params: TypeTag[] = functionAbi.params\n    .slice(numSigners)\n    .map((param) => parseTypeTag(param, { allowGenerics: true }));\n  const entryFunctionAbi: EntryFunctionABI = {\n    typeParameters: functionAbi.generic_type_params,\n    parameters: params,\n    signers: numSigners,\n  };\n  return entryFunctionAbi;\n};\n","import {\n  AccountAddress,\n  type AccountAddressInput,\n  Aptos,\n  type AptosConfig,\n} from \"@aptos-labs/ts-sdk\";\n\nimport type { Decimals } from \"@/types\";\nimport type { Summary } from \"@/types/api\";\nimport { raise } from \"@/utils\";\nimport * as decimals from \"@/utils/decimal\";\n\nexport async function getUsdcBalance(args: {\n  aptosConfig: AptosConfig;\n  summary: Summary;\n  accountAddress: AccountAddressInput;\n}): Promise<Decimals.Collateral> {\n  const aptos = new Aptos(args.aptosConfig);\n  const usdc = args.summary.coins.find((coin) => coin.id === \"usdc\") ?? raise();\n\n  const balances = await aptos.getCurrentFungibleAssetBalances({\n    options: {\n      where: {\n        owner_address: {\n          _eq: AccountAddress.from(args.accountAddress).toStringLong(),\n        },\n        asset_type: { _eq: usdc.assetType },\n      },\n    },\n  });\n\n  if (balances.length === 0) return decimals.dec<6>(0n);\n  return decimals.dec<6>(BigInt(balances[0].amount));\n}\n","import {\n  getAllPairInfos,\n  getAllPairStates,\n  getOrders,\n  getPairInfo,\n  getPairState,\n  getPositions,\n  getSummary,\n  getTradingHistory,\n  postFeepayer,\n} from \"@/api/http\";\nimport type { MerkleClientConfig } from \"@/client/config\";\nimport type { Hex } from \"@/types\";\nimport type { FeepayerResponse, Summary, TradeHistory } from \"@/types/api\";\nimport type { Order, PairInfo, PairState, Position } from \"@/types/trading\";\n\nexport class APIClient {\n  constructor(readonly config: MerkleClientConfig) {}\n\n  /**\n   * @description Get summary\n   * @returns Summary\n   */\n  async getSummary(): Promise<Summary> {\n    return getSummary(this.config);\n  }\n\n  /**\n   * @description Get pair info\n   * @param pairId - Pair ID example: `BTC_USD`\n   * @returns Pair info\n   */\n  async getPairInfo(args: { pairId: string }): Promise<PairInfo> {\n    return getPairInfo({ ...this.config, ...args });\n  }\n\n  /**\n   * @description Get all pair info\n   * @returns All pair info\n   */\n  async getAllPairInfos(): Promise<PairInfo[]> {\n    return getAllPairInfos(this.config);\n  }\n\n  /**\n   * @description Get pair state\n   * @param pairId - Pair ID example: `BTC_USD`\n   * @returns Pair state\n   */\n  async getPairState(args: { pairId: string }): Promise<PairState> {\n    return getPairState({ ...this.config, ...args });\n  }\n\n  /**\n   * @description Get all pair state\n   * @returns All pair state\n   */\n  async getAllPairStates(): Promise<PairState[]> {\n    return getAllPairStates(this.config);\n  }\n\n  /**\n   * @description Get orders\n   * @param address - Address\n   * @returns Orders\n   */\n  async getOrders(args: { address: Hex }): Promise<Order[]> {\n    return getOrders({ ...this.config, ...args });\n  }\n\n  /**\n   * @description Get positions\n   * @param address - Address\n   * @returns Positions\n   */\n  async getPositions(args: { address: Hex }): Promise<Position[]> {\n    return getPositions({ ...this.config, ...args });\n  }\n\n  /**\n   * @description Get trading history\n   * @param address - Address\n   * @returns Trading history\n   */\n  async getTradingHistory(args: { address: Hex }): Promise<TradeHistory[]> {\n    return getTradingHistory({ ...this.config, ...args });\n  }\n\n  /**\n   * @description Post feepayer\n   * @param txHex - Transaction\n   * @param senderAuthenticator - Sender authenticator\n   * @returns Feepayer response\n   */\n  async postFeepayer(args: {\n    txHex: string;\n    senderAuthenticator: string;\n  }): Promise<FeepayerResponse> {\n    return postFeepayer({ ...this.config, ...args });\n  }\n}\n","import { WSAPISession, type WSAPISessionConfig } from \"@/api/ws\";\nimport type { MerkleClientConfig } from \"@/client/config\";\n\nexport class WSAPIClient {\n  constructor(readonly config: MerkleClientConfig) {}\n\n  async connectWsApi(\n    config?: Partial<WSAPISessionConfig>,\n  ): Promise<WSAPISession> {\n    const session = new WSAPISession({\n      wsURL: this.config.merkleConfig.wsURL,\n      ...config,\n    });\n    await session.connect();\n    return session;\n  }\n}\n","import type { AccountAddressInput } from \"@aptos-labs/ts-sdk\";\n\nimport { getUsdcBalance } from \"@/aptos/helpers\";\nimport type { MerkleClientConfig } from \"@/client/config\";\nimport type { Decimals } from \"@/types\";\n\nexport class AptosHelpers {\n  constructor(readonly config: MerkleClientConfig) {}\n\n  async getUsdcBalance(args: {\n    accountAddress: AccountAddressInput;\n  }): Promise<Decimals.Collateral> {\n    return getUsdcBalance({ ...this.config, ...args });\n  }\n}\n","import type { AccountAddressInput } from \"@aptos-labs/ts-sdk\";\n\nimport {\n  cancelOrder,\n  placeLimitOrder,\n  placeMarketOrder,\n  testnetFaucetUSDC,\n  updateTPSL,\n} from \"@/aptos/payloads\";\nimport type { MerkleClientConfig } from \"@/client/config\";\nimport type { Hex } from \"@/types\";\n\nexport class MerklePayloadBuilder {\n  constructor(readonly config: MerkleClientConfig) {}\n\n  placeMarketOrder(args: {\n    /** pair id or pair type */\n    pair: string;\n    userAddress: AccountAddressInput;\n    sizeDelta: bigint;\n    collateralDelta: bigint;\n    slippage?: { markPrice: bigint; slippageBps: bigint };\n    isLong: boolean;\n    isIncrease: boolean;\n    stopLossTriggerPrice?: bigint;\n    takeProfitTriggerPrice?: bigint;\n    canExecuteAbovePrice?: boolean;\n    referrer?: AccountAddressInput;\n  }) {\n    return placeMarketOrder({ ...this.config, ...args });\n  }\n\n  placeLimitOrder(args: {\n    /** pair id or pair type */\n    pair: string;\n    userAddress: AccountAddressInput;\n    sizeDelta: bigint;\n    collateralDelta: bigint;\n    price: bigint;\n    isLong: boolean;\n    isIncrease: boolean;\n    stopLossTriggerPrice?: bigint;\n    takeProfitTriggerPrice?: bigint;\n    canExecuteAbovePrice?: boolean;\n    referrer?: AccountAddressInput;\n  }) {\n    return placeLimitOrder({ ...this.config, ...args });\n  }\n\n  cancelOrder(args: {\n    /** pair id or pair type */\n    pair: string;\n    userAddress: Hex;\n    orderId: bigint;\n  }) {\n    return cancelOrder({ ...this.config, ...args });\n  }\n\n  updateTPSL(args: {\n    /** pair id or pair type */\n    pair: string;\n    userAddress: AccountAddressInput;\n    isLong: boolean;\n    stopLossTriggerPrice: bigint;\n    takeProfitTriggerPrice: bigint;\n  }) {\n    return updateTPSL({ ...this.config, ...args });\n  }\n\n  testnetFaucetUSDC(args: { amount: bigint }) {\n    return testnetFaucetUSDC({ ...this.config, ...args });\n  }\n}\n","export type MerkleConfig = {\n  baseURL: string;\n  wsURL: string;\n\n  fetchFn?: typeof fetch;\n  WebSocketCtor?: typeof WebSocket;\n};\n\nexport namespace MerkleConfig {\n  export const MAINNET = {\n    baseURL: \"https://api.merkle.trade\",\n    wsURL: \"wss://api.merkle.trade/v1\",\n  } satisfies MerkleConfig;\n\n  export const TESTNET = {\n    baseURL: \"https://api.testnet.merkle.trade\",\n    wsURL: \"wss://api.testnet.merkle.trade/v1\",\n  } satisfies MerkleConfig;\n}\n","import { AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n\nimport { getSummary } from \"@/api/http\";\nimport { MerkleConfig } from \"@/config\";\nimport type { Summary } from \"@/types/api\";\n\nexport type MerkleClientConfig = {\n  merkleConfig: MerkleConfig;\n  aptosConfig: AptosConfig;\n  summary: Summary;\n};\n\nexport namespace MerkleClientConfig {\n  const MAINNET_DEPLOYER_ADDRESS =\n    \"0x5ae6789dd2fec1a9ec9cccfb3acaf12e93d432f0a3a42c92fe1a9d490b7bbc06\";\n\n  export const mainnet = async (config?: Partial<MerkleClientConfig>) => {\n    const merkleConfig = config?.merkleConfig ?? MerkleConfig.MAINNET;\n    const aptosConfig =\n      config?.aptosConfig ?? new AptosConfig({ network: Network.MAINNET });\n    const summary = config?.summary ?? (await getSummary({ merkleConfig }));\n\n    if (summary.hostAddress !== MAINNET_DEPLOYER_ADDRESS) {\n      throw new Error(\"Invalid deployer address\");\n    }\n\n    return { merkleConfig, aptosConfig, summary } satisfies MerkleClientConfig;\n  };\n\n  export const testnet = async (config?: Partial<MerkleClientConfig>) => {\n    const merkleConfig = config?.merkleConfig ?? MerkleConfig.TESTNET;\n    const aptosConfig =\n      config?.aptosConfig ?? new AptosConfig({ network: Network.TESTNET });\n    const summary = config?.summary ?? (await getSummary({ merkleConfig }));\n\n    return { merkleConfig, aptosConfig, summary } satisfies MerkleClientConfig;\n  };\n}\n","import { APIClient } from \"@/client/api/http\";\nimport { WSAPIClient } from \"@/client/api/ws\";\nimport { AptosHelpers } from \"./aptos/helpers\";\nimport { MerklePayloadBuilder } from \"./aptos/payloads\";\nimport type { MerkleClientConfig } from \"./config\";\n\n// biome-ignore lint/suspicious/noUnsafeDeclarationMerging: mixin\nexport class MerkleClient {\n  config: MerkleClientConfig;\n\n  api: APIClient;\n  wsapi: WSAPIClient;\n  payloads: MerklePayloadBuilder;\n  aptos: AptosHelpers;\n\n  constructor(config: MerkleClientConfig) {\n    this.config = config;\n\n    this.api = new APIClient(this.config);\n    this.wsapi = new WSAPIClient(this.config);\n    this.payloads = new MerklePayloadBuilder(this.config);\n    this.aptos = new AptosHelpers(this.config);\n  }\n}\n\n// extends MerkleClient so all the methods and properties\n// from the other classes will be recognized by typescript.\nexport interface MerkleClient extends APIClient, WSAPIClient, AptosHelpers {}\n\n/**\n * @see {@link https://www.typescriptlang.org/docs/handbook/mixins.html#alternative-pattern}\n * Here, we combine any subclass and the MerkleClient class.\n */\nfunction applyMixin(targetClass: any, baseClass: any, baseClassProp: string) {\n  // Mixin instance methods\n  Object.getOwnPropertyNames(baseClass.prototype).forEach((propertyName) => {\n    const propertyDescriptor = Object.getOwnPropertyDescriptor(\n      baseClass.prototype,\n      propertyName,\n    );\n    if (!propertyDescriptor) return;\n    propertyDescriptor.value = function (...args: any) {\n      return (this as any)[baseClassProp][propertyName](...args);\n    };\n    Object.defineProperty(\n      targetClass.prototype,\n      propertyName,\n      propertyDescriptor,\n    );\n  });\n}\n\napplyMixin(MerkleClient, APIClient, \"api\");\napplyMixin(MerkleClient, WSAPIClient, \"wsapi\");\napplyMixin(MerkleClient, AptosHelpers, \"aptos\");\n"],"names":["RawPairInfoResponse","RawPairStateResponse","RawTradeHistory","RawPosition","RawOrder","RawSummaryResponse","RawSummaryPair","VERSION","Decimals","PairInfo","CancelOrderEvent","PositionEvent","decimals.dec","AccountAddress","findFirstNonSignerArg","parseTypeTag","Aptos","MerkleConfig","MerkleClientConfig","AptosConfig","Network"],"mappings":"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"}